class Coding:
    """
    Mappings between human-readable tokens and activity patterns.
    Tokens should be strings and patterns should be numpy arrays.
    """

    def __init__(self, make_pattern):
        """
        Set up a coding with a supplied pattern maker function.
        Patterns will be generated by calling make_pattern().
        """
        self.make_pattern = make_pattern
        self.encodings = {} # maps tokens to patterns
        self.decodings = {} # maps patterns to tokens

    def encode(self, token):
        """
        Return the pattern encoding a token.
        Generates a new pattern if token was not already encoded.
        """
        # Encode if not already encoded
        if token not in self.encodings:
            pattern = self.make_pattern()
            self.encodings[token] = pattern
            self.decodings[pattern.tobytes()] = token
        return self.encodings[token]
        
    def decode(self, pattern):
        """
        Return the token for the pattern.
        If no token has been encoded as the pattern, the default is "?"
        """
        return self.decodings.get(pattern.tobytes(), "?")
